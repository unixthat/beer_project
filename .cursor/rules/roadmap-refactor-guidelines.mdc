---
description:
globs:
alwaysApply: true
---
# Road-map & Config Consistency Rule

This rule enforces two project disciplines:

1. **Road-map hygiene** â€“ every substantive change (feature, refactor, architecture decision) **must** be reflected in `roadmap.md` so that future contributors have an up-to-date implementation plan.
2. **Central configuration** â€“ any value that can be influenced by an environment variable **must live in** `src/beer/config.py`; never scatter `os.getenv()` calls throughout the codebase.

## When to update `roadmap.md`
* Introducing or removing a major module (e.g. new event-bus messaging layer).
* Changing external behaviour (protocol, CLI flags, environment variables).
* Adding or re-scoping a Tier test case.

Update the appropriate section and include status (ðŸŸ¢/ðŸŸ¡/ðŸ”´).

## Config guidelines
1. Add the constant to `config.py` with a clear docstring.
2. Use Upper-Snake names and environment variable prefix `BEER_`.
3. Import via `from . import config as _cfg` and reference `_cfg.CONSTANT` â€“ **never** call `os.getenv()` directly elsewhere.

Example:
```python
# GOOD (inside module)
from . import config as _cfg

TURN_TIMEOUT = _cfg.TURN_TIMEOUT
```

```python
# BAD â€“ stray getenv
TURN_TIMEOUT = int(os.getenv("BEER_TURN_TIMEOUT", "180"))
```

Failure to comply should block CI via review comments.
